{"version":3,"sources":["../../src/commands/CacheClearCommand.ts"],"names":[],"mappings":";;;;AAAA,sCAA4C;AAC5C,iFAA8E;AAG9E,6DAA0B;AAC1B,2DAA0D;AAE1D;;GAEG;AACH;IAAA;QAEI,YAAO,GAAG,aAAa,CAAC;QACxB,aAAQ,GAAG,+CAA+C,CAAC;IAqD/D,CAAC;IAnDG,mCAAO,GAAP,UAAQ,IAAgB;QACpB,OAAO,IAAI;aACN,MAAM,CAAC,YAAY,EAAE;YAClB,KAAK,EAAE,GAAG;YACV,OAAO,EAAE,SAAS;YAClB,QAAQ,EAAE,8CAA8C;SAC3D,CAAC;aACD,MAAM,CAAC,QAAQ,EAAE;YACd,KAAK,EAAE,GAAG;YACV,OAAO,EAAE,WAAW;YACpB,QAAQ,EAAE,iDAAiD;SAC9D,CAAC,CAAC;IACX,CAAC;IAEK,mCAAO,GAAb,UAAc,IAAqB;;;;;;wBAE3B,UAAU,GAAyB,SAAS,CAAC;;;;wBAEvC,uBAAuB,GAAG,IAAI,iDAAuB,CAAC;4BACxD,IAAI,EAAE,OAAO,CAAC,GAAG,EAAE;4BACnB,UAAU,EAAE,IAAI,CAAC,MAAa;yBACjC,CAAC,CAAC;wBACuB,qBAAM,uBAAuB,CAAC,GAAG,CAAC,IAAI,CAAC,UAAiB,CAAC,EAAA;;wBAA7E,iBAAiB,GAAG,SAAyD;wBACnF,MAAM,CAAC,MAAM,CAAC,iBAAiB,EAAE;4BAC7B,WAAW,EAAE,EAAE;4BACf,WAAW,EAAE,KAAK;4BAClB,aAAa,EAAE,KAAK;4BACpB,UAAU,EAAE,KAAK;4BACjB,OAAO,EAAE,CAAC,QAAQ,CAAC;yBACtB,CAAC,CAAC;wBACU,qBAAM,IAAA,0BAAgB,EAAC,iBAAiB,CAAC,EAAA;;wBAAtD,UAAU,GAAG,SAAyC,CAAC;wBAEvD,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE;4BAC9B,6BAAa,CAAC,SAAS,CAAC,2EAA2E,CAAC,CAAC;4BACrG,sBAAO;yBACV;wBAED,qBAAM,UAAU,CAAC,gBAAgB,CAAC,KAAK,EAAE,EAAA;;wBAAzC,SAAyC,CAAC;wBAC1C,OAAO,CAAC,GAAG,CAAC,eAAK,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAC,CAAC;6BAEvD,UAAU,EAAV,wBAAU;wBAAE,qBAAM,UAAU,CAAC,KAAK,EAAE,EAAA;;wBAAxB,SAAwB,CAAC;;;;;6BAGrC,UAAU,EAAV,wBAAU;wBAAE,qBAAO,UAAyB,CAAC,KAAK,EAAE,EAAA;;wBAAxC,SAAwC,CAAC;;;wBAEzD,6BAAa,CAAC,SAAS,CAAC,2BAA2B,EAAE,KAAG,CAAC,CAAC;wBAE1D,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;;;;;KAEvB;IAEL,wBAAC;AAAD,CAxDA,AAwDC,IAAA;AAxDY,8CAAiB","file":"CacheClearCommand.js","sourcesContent":["import {createConnection} from \"../globals\";\r\nimport {ConnectionOptionsReader} from \"../connection/ConnectionOptionsReader\";\r\nimport {Connection} from \"../connection/Connection\";\r\nimport * as yargs from \"yargs\";\r\nimport chalk from \"chalk\";\r\nimport { PlatformTools } from \"../platform/PlatformTools\";\r\n\r\n/**\r\n * Clear cache command.\r\n */\r\nexport class CacheClearCommand implements yargs.CommandModule {\r\n\r\n    command = \"cache:clear\";\r\n    describe = \"Clears all data stored in query runner cache.\";\r\n\r\n    builder(args: yargs.Argv) {\r\n        return args\r\n            .option(\"connection\", {\r\n                alias: \"c\",\r\n                default: \"default\",\r\n                describe: \"Name of the connection on which run a query.\"\r\n            })\r\n            .option(\"config\", {\r\n                alias: \"f\",\r\n                default: \"ormconfig\",\r\n                describe: \"Name of the file with connection configuration.\"\r\n            });\r\n    }\r\n\r\n    async handler(args: yargs.Arguments) {\r\n\r\n        let connection: Connection|undefined = undefined;\r\n        try {\r\n            const connectionOptionsReader = new ConnectionOptionsReader({\r\n                root: process.cwd(),\r\n                configName: args.config as any\r\n            });\r\n            const connectionOptions = await connectionOptionsReader.get(args.connection as any);\r\n            Object.assign(connectionOptions, {\r\n                subscribers: [],\r\n                synchronize: false,\r\n                migrationsRun: false,\r\n                dropSchema: false,\r\n                logging: [\"schema\"]\r\n            });\r\n            connection = await createConnection(connectionOptions);\r\n\r\n            if (!connection.queryResultCache) {\r\n                PlatformTools.logCmdErr(\"Cache is not enabled. To use cache enable it in connection configuration.\");\r\n                return;\r\n            }\r\n\r\n            await connection.queryResultCache.clear();\r\n            console.log(chalk.green(\"Cache was successfully cleared\"));\r\n\r\n            if (connection) await connection.close();\r\n\r\n        } catch (err) {\r\n            if (connection) await (connection as Connection).close();\r\n\r\n            PlatformTools.logCmdErr(\"Error during cache clear.\", err);\r\n\r\n            process.exit(1);\r\n        }\r\n    }\r\n\r\n}\r\n"],"sourceRoot":".."}