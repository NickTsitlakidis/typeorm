{"version":3,"sources":["../../src/error/MissingJoinColumnError.ts"],"names":[],"mappings":";;;;AAEA,+CAA4C;AAE5C;IAA4C,uDAAY;IACpD,gCAAY,cAA8B,EAAE,QAA0B;QAAtE,YACI,iBAAO,SAUV;QARG,IAAI,QAAQ,CAAC,eAAe,EAAE;YAC1B,KAAI,CAAC,OAAO,GAAG,4CAA0C,cAAc,CAAC,IAAI,SAAI,QAAQ,CAAC,YAAY,UAAO;iBACrG,QAAQ,CAAC,qBAAqB,CAAC,IAAI,SAAI,QAAQ,CAAC,eAAe,CAAC,YAAY,+BAA4B,CAAA;gBAC3G,2DAA2D,CAAC;SACnE;aAAM;YACH,KAAI,CAAC,OAAO,GAAG,8BAA4B,cAAc,CAAC,IAAI,SAAI,QAAQ,CAAC,YAAY,+BAA4B;gBAC/G,6CAA6C,CAAC;SACrD;;IACL,CAAC;IACL,6BAAC;AAAD,CAbA,AAaC,CAb2C,2BAAY,GAavD;AAbY,wDAAsB","file":"MissingJoinColumnError.js","sourcesContent":["import {EntityMetadata} from \"../metadata/EntityMetadata\";\r\nimport {RelationMetadata} from \"../metadata/RelationMetadata\";\r\nimport {TypeORMError} from \"./TypeORMError\";\r\n\r\nexport class MissingJoinColumnError extends TypeORMError {\r\n    constructor(entityMetadata: EntityMetadata, relation: RelationMetadata) {\r\n        super();\r\n\r\n        if (relation.inverseRelation) {\r\n            this.message = `JoinColumn is missing on both sides of ${entityMetadata.name}#${relation.propertyName} and ` +\r\n                `${relation.inverseEntityMetadata.name}#${relation.inverseRelation.propertyName} one-to-one relationship. ` +\r\n                `You need to put JoinColumn decorator on one of the sides.`;\r\n        } else {\r\n            this.message = `JoinColumn is missing on ${entityMetadata.name}#${relation.propertyName} one-to-one relationship. ` +\r\n                `You need to put JoinColumn decorator on it.`;\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":".."}