{"version":3,"sources":["../../src/error/UsingJoinColumnOnlyOnOneSideAllowedError.ts"],"names":[],"mappings":";;;;AAEA,+CAA4C;AAE5C;IAA8D,yEAAY;IACtE,kDAAY,cAA8B,EAAE,QAA0B;eAClE,kBACI,+EAA+E;aAC/E,UAAQ,cAAc,CAAC,IAAI,SAAI,QAAQ,CAAC,YAAY,aAAQ,QAAQ,CAAC,qBAAqB,CAAC,IAAI,SAAI,QAAQ,CAAC,eAAgB,CAAC,YAAY,MAAG,CAAA;YAC5I,uFAAuF,CAC1F;IACL,CAAC;IACL,+CAAC;AAAD,CARA,AAQC,CAR6D,2BAAY,GAQzE;AARY,4FAAwC","file":"UsingJoinColumnOnlyOnOneSideAllowedError.js","sourcesContent":["import {EntityMetadata} from \"../metadata/EntityMetadata\";\r\nimport {RelationMetadata} from \"../metadata/RelationMetadata\";\r\nimport {TypeORMError} from \"./TypeORMError\";\r\n\r\nexport class UsingJoinColumnOnlyOnOneSideAllowedError extends TypeORMError {\r\n    constructor(entityMetadata: EntityMetadata, relation: RelationMetadata) {\r\n        super(\r\n            `Using JoinColumn is allowed only on one side of the one-to-one relationship. ` +\r\n            `Both ${entityMetadata.name}#${relation.propertyName} and ${relation.inverseEntityMetadata.name}#${relation.inverseRelation!.propertyName} ` +\r\n            `has JoinTable decorators. Choose one of them and left JoinTable decorator only on it.`\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":".."}