{"version":3,"sources":["../../src/error/UsingJoinColumnIsNotAllowedError.ts"],"names":[],"mappings":";;;;AAEA,+CAA4C;AAE5C;IAAsD,iEAAY;IAC9D,0CAAY,cAA8B,EAAE,QAA0B;eAClE,kBACI,yBAAuB,cAAc,CAAC,IAAI,SAAI,QAAQ,CAAC,YAAY,gBAAa;YAChF,sEAAsE,CACzE;IACL,CAAC;IACL,uCAAC;AAAD,CAPA,AAOC,CAPqD,2BAAY,GAOjE;AAPY,4EAAgC","file":"UsingJoinColumnIsNotAllowedError.js","sourcesContent":["import {EntityMetadata} from \"../metadata/EntityMetadata\";\r\nimport {RelationMetadata} from \"../metadata/RelationMetadata\";\r\nimport {TypeORMError} from \"./TypeORMError\";\r\n\r\nexport class UsingJoinColumnIsNotAllowedError extends TypeORMError {\r\n    constructor(entityMetadata: EntityMetadata, relation: RelationMetadata) {\r\n        super(\r\n            `Using JoinColumn on ${entityMetadata.name}#${relation.propertyName} is wrong. ` +\r\n            `You can use JoinColumn only on one-to-one and many-to-one relations.`\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":".."}