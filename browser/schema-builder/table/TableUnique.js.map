{"version":3,"sources":["../browser/src/schema-builder/table/TableUnique.ts"],"names":[],"mappings":";AAGA;;GAEG;AACH;IAsBI,4EAA4E;IAC5E,cAAc;IACd,4EAA4E;IAE5E,qBAAY,OAA2B;QAfvC;;WAEG;QACH,gBAAW,GAAa,EAAE,CAAC;QAavB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;IACzC,CAAC;IAED,4EAA4E;IAC5E,iBAAiB;IACjB,4EAA4E;IAE5E;;OAEG;IACH,2BAAK,GAAL;QACI,OAAO,IAAI,WAAW,CAAqB;YACvC,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,WAAW,2BAAM,IAAI,CAAC,WAAW,SAAC;YAClC,UAAU,EAAE,IAAI,CAAC,UAAU;SAC9B,CAAC,CAAC;IACP,CAAC;IAED,4EAA4E;IAC5E,iBAAiB;IACjB,4EAA4E;IAE5E;;OAEG;IACI,kBAAM,GAAb,UAAc,cAA8B;QACxC,OAAO,IAAI,WAAW,CAAqB;YACvC,IAAI,EAAE,cAAc,CAAC,IAAI;YACzB,WAAW,EAAE,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,YAAY,EAAnB,CAAmB,CAAC;YACtE,UAAU,EAAE,cAAc,CAAC,UAAU;SACxC,CAAC,CAAC;IACP,CAAC;IAEL,kBAAC;AAAD,CA9DA,AA8DC,IAAA","file":"TableUnique.js","sourcesContent":["import {TableUniqueOptions} from \"../options/TableUniqueOptions\";\r\nimport {UniqueMetadata} from \"../../metadata/UniqueMetadata\";\r\n\r\n/**\r\n * Database's table unique constraint stored in this class.\r\n */\r\nexport class TableUnique {\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Public Properties\r\n    // -------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Constraint name.\r\n     */\r\n    name?: string;\r\n\r\n    /**\r\n     * Columns that contains this constraint.\r\n     */\r\n    columnNames: string[] = [];\r\n\r\n    /**\r\n     * Set this foreign key constraint as \"DEFERRABLE\" e.g. check constraints at start\r\n     * or at the end of a transaction\r\n     */\r\n     deferrable?: string;\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Constructor\r\n    // -------------------------------------------------------------------------\r\n\r\n    constructor(options: TableUniqueOptions) {\r\n        this.name = options.name;\r\n        this.columnNames = options.columnNames;\r\n        this.deferrable = options.deferrable;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Public Methods\r\n    // -------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Creates a new copy of this constraint with exactly same properties.\r\n     */\r\n    clone(): TableUnique {\r\n        return new TableUnique(<TableUniqueOptions>{\r\n            name: this.name,\r\n            columnNames: [...this.columnNames],\r\n            deferrable: this.deferrable,\r\n        });\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Static Methods\r\n    // -------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Creates unique from the unique metadata object.\r\n     */\r\n    static create(uniqueMetadata: UniqueMetadata): TableUnique {\r\n        return new TableUnique(<TableUniqueOptions>{\r\n            name: uniqueMetadata.name,\r\n            columnNames: uniqueMetadata.columns.map(column => column.databaseName),\r\n            deferrable: uniqueMetadata.deferrable,\r\n        });\r\n    }\r\n\r\n}"],"sourceRoot":"../.."}