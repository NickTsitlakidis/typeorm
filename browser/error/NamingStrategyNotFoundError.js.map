{"version":3,"sources":["../browser/src/error/NamingStrategyNotFoundError.ts"],"names":[],"mappings":";AAAA,OAAO,EAAC,YAAY,EAAC,MAAM,gBAAgB,CAAC;AAE5C;;GAEG;AACH;IAAiD,+CAAY;IACzD,qCAAY,YAA6B,EAAE,cAAsB;QAAjE,YACI,iBAAO,SAKV;QAHG,IAAM,IAAI,GAAG,YAAY,YAAY,QAAQ,CAAC,CAAC,CAAE,YAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC;QAC1F,KAAI,CAAC,OAAO,GAAG,uBAAoB,IAAI,gEAA4D;aAC/F,iDAA8C,cAAc,mBAAe,CAAA,CAAC;;IACpF,CAAC;IACL,kCAAC;AAAD,CARA,AAQC,CARgD,YAAY,GAQ5D","file":"NamingStrategyNotFoundError.js","sourcesContent":["import {TypeORMError} from \"./TypeORMError\";\r\n\r\n/**\r\n * Thrown when consumer tries to use naming strategy that does not exist.\r\n */\r\nexport class NamingStrategyNotFoundError extends TypeORMError {\r\n    constructor(strategyName: string|Function, connectionName: string) {\r\n        super();\r\n\r\n        const name = strategyName instanceof Function ? (strategyName as any).name : strategyName;\r\n        this.message = `Naming strategy \"${name}\" was not found. Looks like this naming strategy does not ` +\r\n            `exist or it was not registered in current \"${connectionName}\" connection?`;\r\n    }\r\n}\r\n"],"sourceRoot":".."}