{"version":3,"sources":["../browser/src/logger/SimpleConsoleLogger.ts"],"names":[],"mappings":"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","file":"SimpleConsoleLogger.js","sourcesContent":["import { LoggerOptions } from \"./LoggerOptions\"\r\nimport { QueryRunner } from \"../query-runner/QueryRunner\"\r\nimport { Logger } from \"./Logger\"\r\n\r\n/**\r\n * Performs logging of the events in TypeORM.\r\n * This version of logger uses console to log events and does not use syntax highlighting.\r\n */\r\nexport class SimpleConsoleLogger implements Logger {\r\n    // -------------------------------------------------------------------------\r\n    // Constructor\r\n    // -------------------------------------------------------------------------\r\n\r\n    constructor(private options?: LoggerOptions) {}\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Public Methods\r\n    // -------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Logs query and parameters used in it.\r\n     */\r\n    logQuery(query: string, parameters?: any[], queryRunner?: QueryRunner) {\r\n        if (\r\n            this.options === \"all\" ||\r\n            this.options === true ||\r\n            (Array.isArray(this.options) &&\r\n                this.options.indexOf(\"query\") !== -1)\r\n        ) {\r\n            const sql =\r\n                query +\r\n                (parameters && parameters.length\r\n                    ? \" -- PARAMETERS: \" + this.stringifyParams(parameters)\r\n                    : \"\")\r\n            console.log(\"query\" + \": \" + sql)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Logs query that is failed.\r\n     */\r\n    logQueryError(\r\n        error: string,\r\n        query: string,\r\n        parameters?: any[],\r\n        queryRunner?: QueryRunner,\r\n    ) {\r\n        if (\r\n            this.options === \"all\" ||\r\n            this.options === true ||\r\n            (Array.isArray(this.options) &&\r\n                this.options.indexOf(\"error\") !== -1)\r\n        ) {\r\n            const sql =\r\n                query +\r\n                (parameters && parameters.length\r\n                    ? \" -- PARAMETERS: \" + this.stringifyParams(parameters)\r\n                    : \"\")\r\n            console.log(`query failed: ` + sql)\r\n            console.log(`error:`, error)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Logs query that is slow.\r\n     */\r\n    logQuerySlow(\r\n        time: number,\r\n        query: string,\r\n        parameters?: any[],\r\n        queryRunner?: QueryRunner,\r\n    ) {\r\n        const sql =\r\n            query +\r\n            (parameters && parameters.length\r\n                ? \" -- PARAMETERS: \" + this.stringifyParams(parameters)\r\n                : \"\")\r\n        console.log(`query is slow: ` + sql)\r\n        console.log(`execution time: ` + time)\r\n    }\r\n\r\n    /**\r\n     * Logs events from the schema build process.\r\n     */\r\n    logSchemaBuild(message: string, queryRunner?: QueryRunner) {\r\n        if (\r\n            this.options === \"all\" ||\r\n            (Array.isArray(this.options) &&\r\n                this.options.indexOf(\"schema\") !== -1)\r\n        ) {\r\n            console.log(message)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Logs events from the migrations run process.\r\n     */\r\n    logMigration(message: string, queryRunner?: QueryRunner) {\r\n        console.log(message)\r\n    }\r\n\r\n    /**\r\n     * Perform logging using given logger, or by default to the console.\r\n     * Log has its own level and message.\r\n     */\r\n    log(\r\n        level: \"log\" | \"info\" | \"warn\",\r\n        message: any,\r\n        queryRunner?: QueryRunner,\r\n    ) {\r\n        switch (level) {\r\n            case \"log\":\r\n                if (\r\n                    this.options === \"all\" ||\r\n                    (Array.isArray(this.options) &&\r\n                        this.options.indexOf(\"log\") !== -1)\r\n                )\r\n                    console.log(message)\r\n                break\r\n            case \"info\":\r\n                if (\r\n                    this.options === \"all\" ||\r\n                    (Array.isArray(this.options) &&\r\n                        this.options.indexOf(\"info\") !== -1)\r\n                )\r\n                    console.info(message)\r\n                break\r\n            case \"warn\":\r\n                if (\r\n                    this.options === \"all\" ||\r\n                    (Array.isArray(this.options) &&\r\n                        this.options.indexOf(\"warn\") !== -1)\r\n                )\r\n                    console.warn(message)\r\n                break\r\n        }\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Protected Methods\r\n    // -------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Converts parameters to a string.\r\n     * Sometimes parameters can have circular objects and therefor we are handle this case too.\r\n     */\r\n    protected stringifyParams(parameters: any[]) {\r\n        try {\r\n            return JSON.stringify(parameters)\r\n        } catch (error) {\r\n            // most probably circular objects in parameters\r\n            return parameters\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":".."}